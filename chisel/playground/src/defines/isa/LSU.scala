package cpu.defines

import chisel3._
import chisel3.util._

object LSUOpType {
  def lb    = "b0000".U
  def lh    = "b0001".U
  def lw    = "b0010".U
  def ld    = "b0011".U
  def lbu   = "b0100".U
  def lhu   = "b0101".U
  def lwu   = "b0110".U
  
  def sb    = "b1000".U
  def sh    = "b1001".U
  def sw    = "b1010".U
  def sd    = "b1011".U
  
  def isStore(func: UInt): Bool = func(3)
  def isLoad(func: UInt): Bool = !isStore(func)
}

object RVMemInstr extends HasInstrType {
  def LB     = BitPat("b???????_?????_?????_000_?????_0000011")
  def LH     = BitPat("b???????_?????_?????_001_?????_0000011")
  def LW     = BitPat("b???????_?????_?????_010_?????_0000011")
  def LD     = BitPat("b???????_?????_?????_011_?????_0000011")
  def LBU    = BitPat("b???????_?????_?????_100_?????_0000011")
  def LHU    = BitPat("b???????_?????_?????_101_?????_0000011")
  def LWU    = BitPat("b???????_?????_?????_110_?????_0000011")
  
  def SB     = BitPat("b???????_?????_?????_000_?????_0100011")
  def SH     = BitPat("b???????_?????_?????_001_?????_0100011")
  def SW     = BitPat("b???????_?????_?????_010_?????_0100011")
  def SD     = BitPat("b???????_?????_?????_011_?????_0100011")
  
  val table = Array(
    LB     -> List(InstrI, FuType.lsu, 0.U(1.W) ## LSUOpType.lb),
    LH     -> List(InstrI, FuType.lsu, 0.U(1.W) ## LSUOpType.lh),
    LW     -> List(InstrI, FuType.lsu, 0.U(1.W) ## LSUOpType.lw),
    LD     -> List(InstrI, FuType.lsu, 0.U(1.W) ## LSUOpType.ld),
    LBU    -> List(InstrI, FuType.lsu, 0.U(1.W) ## LSUOpType.lbu),
    LHU    -> List(InstrI, FuType.lsu, 0.U(1.W) ## LSUOpType.lhu),
    LWU    -> List(InstrI, FuType.lsu, 0.U(1.W) ## LSUOpType.lwu),
    
    SB     -> List(InstrS, FuType.lsu, 0.U(1.W) ## LSUOpType.sb),
    SH     -> List(InstrS, FuType.lsu, 0.U(1.W) ## LSUOpType.sh),
    SW     -> List(InstrS, FuType.lsu, 0.U(1.W) ## LSUOpType.sw),
    SD     -> List(InstrS, FuType.lsu, 0.U(1.W) ## LSUOpType.sd)
  )
}